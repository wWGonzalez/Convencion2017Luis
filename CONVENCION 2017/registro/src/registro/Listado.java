/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package registro;

import SQL.ShareConnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Luis
 */
public class Listado extends javax.swing.JFrame {

    java.sql.PreparedStatement statement = null;
    java.sql.ResultSet result = null;
    String sql = null;
    
    String idEstudiante="";
    /**
     * Creates new form NewJFrame
     */
    public Listado(String sentencia) {
        initComponents();
        cargarDatos(sentencia);
        setVisible(true);
        mostrar("");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        datos = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(datos);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jLabel1.setText("Buscar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
    mostrar(this.jTextField1.getText());
    }//GEN-LAST:event_jTextField1KeyPressed

    private void datosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datosMouseClicked
        // TODO add your handling code here:
        this.setIdEstudiante();
        Update();
    }//GEN-LAST:event_datosMouseClicked

    
    
    //Guarda los datos en variables globales
    public void setIdEstudiante(){
       try{
            int row=this.datos.getSelectedRow();
            String Table_click=(this.datos.getModel().getValueAt(row,  0).toString());
            String sql="select * from convencion.estudiante where carne='"+Table_click+"' ";
            statement = ShareConnection.connection.getConn().prepareStatement(sql);
             result = statement.executeQuery();    
             if(result.next()){
                 this.idEstudiante=result.getString("idEstudiante");
                  this.jTextField1.setText(idEstudiante);
                   JOptionPane.showMessageDialog(rootPane, "Asistencia Registrada exitosamente");
              
                 
                 
                 
                // this.txtTelefono.setText(idEstudiante);
                // this.txtCarne.setText(carne);
                
            //  bus.setVisible(true);
             // bus.txtID.setText(add1);
                
                //this.setVisible(false);
                 
             }
            // statement.close();
        }catch (SQLException ex) {
                Logger.getLogger(RegistroEstudiante.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error al ingresar los datos: " + ex.getMessage());
            
        }
       
              
    }
    
    void Update(){
        sql = "UPDATE convencion.estudiante SET asistencia=? WHERE idEstudiante=?;";
            try {
                statement = ShareConnection.connection.getConn().prepareStatement(sql);
                statement.setString(1, "1");
                statement.setString(2, this.idEstudiante);
                
                //result = statement.executeQuery(sql);
                statement.execute();
                statement.close();
                result.close();
            } catch (SQLException ex) {
                Logger.getLogger(RegistroEstudiante.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error al ingresar los datos: " + ex.getMessage());
            }
    }
    
    
    
    void mostrar(String valor){
   
           sql = "select carne as Carnet, nombre as Nombre, apellido as Apellido, bus as Bus, idAsiento as 'No. Inscripcion' from convencion.estudiante inner join convencion.asientos on estudiante.idEstudiante = asientos.Estudiante_idEstudiante inner join convencion.bus on bus.idBus = asientos.Bus_idBus where nombre LIKE '%"+jTextField1.getText()+"%'";
            try {
                statement = ShareConnection.connection.getConn().prepareStatement(sql);
                result = statement.executeQuery();
                datos.setModel(DbUtils.resultSetToTableModel(result));
                statement.close();
                result.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al leer los datos: " + e.getMessage());
            }
        
    }

    
    
    public void cargarDatos(String sentencia){
        if(sentencia.equals("all")){
            sql = "select carne as Carnet, nombre as Nombre, apellido as Apellido, bus as Bus, idAsiento as 'No. Inscripcion' from convencion.estudiante inner join convencion.asientos on estudiante.idEstudiante = asientos.Estudiante_idEstudiante inner join convencion.bus on bus.idBus = asientos.Bus_idBus;";
            try {
                statement = ShareConnection.connection.getConn().prepareStatement(sql);
                result = statement.executeQuery();
                datos.setModel(DbUtils.resultSetToTableModel(result));
                statement.close();
                result.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al leer los datos: " + e.getMessage());
            }
        }
        else{
            sql = "select carne as Carnet, nombre as Nombre, apellido as Apellido, bus as Bus, idAsiento as 'No. Inscripcion' from convencion.bus inner join convencion.asientos on bus.idBus = asientos.Bus_idBus inner join convencion.estudiante on asientos.Estudiante_idEstudiante = estudiante.idEstudiante where Bus = ?;";
            try {
                statement = ShareConnection.connection.getConn().prepareStatement(sql);
                statement.setString(1, sentencia);
                result = statement.executeQuery();
                datos.setModel(DbUtils.resultSetToTableModel(result));
                statement.close();
                result.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al leer los datos: " + e.getMessage());
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable datos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
